// -----------------------------------------------------------------------------
// This file contains CSS helper classes.
// -----------------------------------------------------------------------------



/**
 * Clear inner floats
 */
.clearfix::after {
  clear: both;
  content: '';
  display: table;
}


/* Styles used for hiding or showing elements
***************************************************/

/*
 * Hide elements at small viewport size
 */
.hidden-small {
  display: none;
  @include breakpoint(map-get($break, medium)) {
    display: block;
  }
}

/*
 * Hide elements at small viewport size
 */
.hidden-medium {
  display: block;
  @include breakpoint(map-get($break, medium)) {
    display: none;
  }
}

/*
 * Hides item
 */
.hidden {
  display: none;
}

.hidden-menu {
  display: none;

  .selected + & {
    display: block;
  }
}



/*
 * Selects item
 */

 .displayed {
  display: inline-block;
 }


/* Styles used for modifying colours
***************************************************/

/*
 * White text or svg
 */
.white {
  color: $white;
  fill: $white;
}

/*
 * Black text or svg
 */
.black {
  color: $black;
  fill: $black;
}

/*
 * Changes the background color from white at small size
 * to black at large size
 */
.white-to-black {
  color: $white;
  @include breakpoint(map-get($break, medium)) {
      color: $black;
  }
}

/*
 * Changes the background color from black at small size
 * to white at large size
 */
.black-to-white {
  color: $black;
  @include breakpoint(map-get($break, medium)) {
      color: $white;
  }
}

/*
 * Applies the svg greyscale filter at large vieport size
 * and removes it on hover
 */

.hover-color {
  @include breakpoint(map-get($break, medium)) {
      filter: url(#greyscale);

    &:hover {
      filter: none;
    }
    }
}







